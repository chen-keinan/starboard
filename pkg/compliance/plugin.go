package compliance

import (
	"github.com/aquasecurity/starboard/pkg/ext"
	"github.com/go-logr/logr"
	"time"
)

// Plugin defines the interface between Starboard and Kubernetes configuration
// checker with compliance reports.
type Plugin interface {
	// GetComplianceSpecs describes the compliance specs which compliance reports will be generated by
	GetComplianceSpecs() []Spec
	// GetKubernetesCurrentTime retuen the current time by k8s clock
	GetKubernetesCurrentTime() time.Time
}

type CompliancePlugin struct {
	clock ext.Clock
	specs []Spec
}

func (c CompliancePlugin) GetKubernetesCurrentTime() time.Time {
	//TODO implement me
	return c.clock.Now()
}

func (c CompliancePlugin) GetComplianceSpecs() []Spec {
	return c.specs
}

// NewCompliancePlugin constructs a new Plugin, which is using an official
// compliance reports
func NewCompliancePlugin(clock ext.Clock, log logr.Logger) Plugin {
	specs, err := LoadClusterComplianceSpecs()
	if err != nil {
		log.V(1).Info("compliance specs has not been loaded")
	}
	return &CompliancePlugin{
		clock: clock,
		specs: specs,
	}
}
